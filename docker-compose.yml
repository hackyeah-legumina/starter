version: '3'
services:
  backend:
    build:
      context: "./apps/backend-microservice"
      dockerfile: "Dockerfile"
      args:
        UID: "${UID}"
        GID: "${GID}"
    working_dir: "/app"
    restart: "unless-stopped"
    environment:
      NODE_ENV: "development"
      HOST: "0.0.0.0"
      PORT: "3000"
      DATABASE_URL: $DATABASE_URL
      AI_URL: $AI_URL
      JWT_SECRET: $JWT_SECRET
    expose:
      - "3000"
    volumes:
      - "./apps/backend-microservice:/app:delegated"
    command: "bash -c 'yarn install --frozen-lockfile && yarn prisma generate && yarn prisma migrate dev && yarn start:dev'"
    networks:
      - "app"
    depends_on:
      - "mysql"

  frontend:
    build:
      context: "./apps/client"
      dockerfile: "Dockerfile"
      args:
        UID: "${UID}"
        GID: "${GID}"
    working_dir: "/app"
    restart: "unless-stopped"
    expose:
      - "8080"
    volumes:
      - "./apps/client:/app:delegated"
    command: "bash -c 'npm install && npm run dev'"
    networks:
      - "app"

  nginx:
    image: "nginx:1.25"
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./nginx/app.crt:/etc/nginx/cert/app.crt"
      - "./nginx/app.key:/etc/nginx/cert/app.key"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - "app"
    depends_on:
      - "backend"
      - "frontend"

  mysql:
    image: "mysql:8"
    restart: "unless-stopped"
    environment:
      MYSQL_DATABASE: "app"
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - "mysql:/var/lib/mysql"
    networks:
      - "app"


networks:
  app: null

volumes:
  mysql: null
